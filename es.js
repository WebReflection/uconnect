self.uconnect=function(e){"use strict";function n(e){e.type in this&&this[e.type](e)}return e.observe=(e,t,c,s)=>{const d=new WeakMap,o=new WeakMap,a=new WeakMap,i=e=>d.has(e),r=e=>{i(e)&&(l(e,e.removeEventListener,d.get(e)),d.delete(e))},l=(e,n,t)=>{n.call(e,"disconnected",t),n.call(e,"connected",t)},h=(e,n,t,c)=>{for(let{length:s}=e,d=0;d<s;d++)v(e[d],n,t,c)},v=(e,n,s,d)=>{i(e)&&!s.has(e)&&(d.delete(e),s.set(e,0),e.dispatchEvent(new(c||CustomEvent)(n))),h(e[t||"children"]||[],n,s,d)},u=new(s||MutationObserver)((e=>{for(let{length:n}=e,t=0;t<n;t++){const{removedNodes:n,addedNodes:c}=e[t];h(n,"disconnected",a,o),h(c,"connected",o,a)}}));return u.observe(e||document,{subtree:!0,childList:!0}),{has:i,connect:(e,t)=>{r(e),(t||(t={})).handleEvent||(t.handleEvent=n),l(e,e.addEventListener,t),d.set(e,t)},disconnect:r,kill(){u.disconnect()}}},e}({});
